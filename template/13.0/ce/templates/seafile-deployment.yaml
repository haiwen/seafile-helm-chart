apiVersion: apps/v1
kind: Deployment
metadata:
  name: seafile
spec:
  replicas: 1
  selector:
    matchLabels:
      app: seafile
  template:
    metadata:
      labels:
        app: seafile
    spec:
      initContainers:  
        - name: set-ownership  
          image: busybox  
          command: ['sh', '-c', 'chown -R root:root /shared']  
          volumeMounts:  
          - name: seafile-data  
            mountPath: /shared
      containers:
        - name: seafile
          image: {{ include "seafile.image" . }}
          env:
            # constant env
            - name: SEAF_SERVER_STORAGE_TYPE
              value: "disk"

            # common env
            {{- $overrideEnv := .Values.seafile.env -}}
            {{- $initMode := .Values.seafile.initMode -}}

            ## Initialize calibration parameters

            ### notification server
            {{- $enableNotificationServer := "false" -}}
            {{- $notificationServerURL := "" -}}

            ### cache
            {{- $cacheProvider := "redis" -}}
            {{- $redisHost := "" -}}
            {{- $memcachedHost := "" -}}

            ### seadoc
            {{- $enableSeadoc := "false" -}}
            {{- $seadocServerURL := "" -}}

            ### seafile ai
            {{- $enableSeafileAI := "false" -}}
            {{- $seafileAIServerURL := "" -}}

            {{- range .Values.seafile.presetEnv }}
              
              # update calibration values

              ## notification server
              {{- if eq .name "NOTIFICATION_SERVER_URL" }}
                {{- $notificationServerURL = (index $overrideEnv .name | default .value | default "") -}}
              
              ## cache
              {{- else if eq .name "CACHE_PROVIDER" }}
                {{- $cacheProvider = (index $overrideEnv .name | default .value | default "redis") -}}
              {{- else if eq .name "REDIS_HOST" }}
                {{- $redisHost = (index $overrideEnv .name | default .value | default "") -}}
              {{- else if eq .name "MEMCACHED_HOST" }}
                {{- $memcachedHost = (index $overrideEnv .name | default .value | default "") -}}

              ## seadoc
              {{- else if eq .name "ENABLE_SEADOC" }}
                {{- $enableSeadoc = (index $overrideEnv .name | default .value | default "false") -}}
              {{- else if eq .name "SEADOC_SERVER_URL" }}
                {{- $seadocServerURL = (index $overrideEnv .name | default .value | default "") -}}

              ## seafile ai
              {{- else if eq .name "ENABLE_SEAFILE_AI" }}
                {{- $enableSeafileAI = (index $overrideEnv .name | default .value | default "false") -}}
              {{- else if eq .name "SEAFILE_AI_SERVER_URL" }}
                {{- $seafileAIServerURL = (index $overrideEnv .name | default .value | default "") -}}
              {{- end }}

            # write to yaml
            - name: {{ .name }}
              {{- $valueFromEnv := (index $overrideEnv .name | default "") -}}
              {{- if and ($valueFromEnv) (not (eq $valueFromEnv "<required>")) }}
              value: {{ $valueFromEnv | quote }}
              {{- else if .value }}
              value: {{ .value | quote }}
              {{- else if or (.allowEmpty) (and (not $initMode) (.initValue)) }}
              value: ""
              {{- else }}
              {{- fail (printf "%s is not specified and is not allowed to be empty" .name) -}}
              {{- end }}
            {{- end }}

            # common secret
            {{- $overrideSecretMap := .Values.seafile.secretsMap -}}
            {{- range .Values.seafile.presetSecretsMap }}
            {{- $secretDetails := (index $overrideSecretMap .name | default (dict "secret" .secret "key" .key)) }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretDetails.secret | default .secret }}
                  key: {{ $secretDetails.key | default .key }}
            {{- end }}

            # Calibrating
            ## notification server
            {{- if eq $enableNotificationServer "true" }}
              {{- if $notificationServerURL }}
            - name: INNER_NOTIFICATION_SERVER_URL
              value: {{ $notificationServerURL | quote }}
              {{- else }}
                {{- fail (printf "You have enabled notification server but NOTIFICATION_SERVER_URL is not specified and is not allowed to be empty") -}}
              {{- end }}
            ## cache
            {{- else if or (and (eq $cacheProvider "redis") (not $redisHost)) (and (eq $cacheProvider "memcached") (not $memcachedHost)) }}
              {{- fail (printf "You are using %s but %s_HOST is not specified and is not allowed to be empty!" $cacheProvider ($cacheProvider | upper)) -}}
            ## seadoc
            {{- else if and (eq $enableSeadoc "true") (not $seadocServerURL) }}
              {{- fail (printf "You have enabled Seadoc but SEADOC_SERVER_URL is not specified and is not allowed to be empty") -}}
            ## seafile ai
            {{- else if and (eq $enableSeafileAI "true") (not $seafileAIServerURL) }}
              {{- fail (printf "You have enabled Seafile AI but SEAFILE_AI_SERVER_URL is not specified and is not allowed to be empty") -}}
            {{- end }}

            # extra envs
            {{- if .Values.seafile.extraEnv }}
            {{- toYaml .Values.seafile.extraEnv | nindent 12 }}
            {{- end }}
          ports:
            - containerPort: 80
          volumeMounts:
            - name: seafile-data
              mountPath: /shared
            {{- range .Values.seafile.extraVolumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
            {{- end }}
          resources: {{- toYaml .Values.seafile.extraResources | nindent 12 }}
      volumes:
        - name: seafile-data
          persistentVolumeClaim:
            claimName: seafile-data
        {{- range .Values.seafile.extraVolumes }}
        - name: {{ .name }}
          {{- toYaml .volumeInfo | nindent 10 }}
        {{- end }}
      restartPolicy: Always
      imagePullSecrets:
        - name: regcred